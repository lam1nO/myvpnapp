import hashlib
import requests
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import config
import db
import vpn_config

import aiohttp
import uuid
import logging
from yookassa import Payment
from yookassa.configuration import Configuration

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa
YOOKASSA_SHOP_ID = config.YOOKASSA_SHOP_ID
YOOKASSA_SECRET_KEY = config.YOOKASSA_SECRET_KEY
Configuration.account_id = YOOKASSA_SHOP_ID
Configuration.secret_key = YOOKASSA_SECRET_KEY
DEFAULT_AMOUNT = config.VPN_PRICE

# –õ–æ–≥–≥–µ—Ä
logger = logging.getLogger("billing")

async def create_payment(user_id: int, amount = DEFAULT_AMOUNT):
    return_url: str = "vk.com"
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É.
    :param amount: –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param return_url: URL –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
    :return: –°–ª–æ–≤–∞—Ä—å —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    """
    try:
        payment = Payment.create({
            "amount": {"value": f"{amount:.2f}", "currency": "RUB"},
            "confirmation": {"type": "redirect", "return_url": return_url},
            "capture": True,
            "description": f"–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}",
            "metadata": {"user_id": user_id}
        })
        return payment.id, payment.confirmation.confirmation_url
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        return "error", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞"

async def check_payment(payment_id: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –µ–≥–æ ID.
    :param payment_id: ID –ø–ª–∞—Ç–µ–∂–∞
    :return: True, –µ—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ–≤–µ–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    try:
        payment = Payment.find_one(payment_id)
        return payment.status == "succeeded"
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {e}")
        return False

async def process_payment(user_id, bot, callback_query):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞. 
    –°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–û–ø–ª–∞—Ç–∏–ª'.
    """
    payment_id, payment_link = await create_payment(user_id)

    if not payment_link:
        await bot.answer_callback_query(callback_query.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞!")
        return

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∏–ª", callback_data=f"check_payment:{payment_id}")]])


    await bot.edit_message_text(
        chat_id=user_id,
        message_id=callback_query.message.message_id,
        text=f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É (199‚ÇΩ):\n\n"
             f"[–û–ø–ª–∞—Ç–∏—Ç—å]({payment_link})\n\n"
             f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        parse_mode="Markdown",
        reply_markup=keyboard
    )

async def finalize_payment(user_id, payment_id, bot, callback_query):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–ª–∞—Ç–µ–∂ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é VPN-–∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ."""
    if await check_payment(payment_id):
        link, username, password = vpn_config.get_new_config()
        await bot.edit_message_text(
            chat_id=user_id,
            message_id=callback_query.message.message_id,
            text=f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n"
                 f"üîë –õ–æ–≥–∏–Ω: `{username}`\n"
                 f"üîë –ü–∞—Ä–æ–ª—å: `{password}`\n"
                 f"üì• [–°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥]({link})",
            parse_mode="Markdown"
        )
    else:
        await bot.answer_callback_query(callback_query.id, "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
